apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.example.jaison.hasura_todo"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.0'
    testCompile 'junit:junit:4.12'

    compile 'com.github.hasura:baas-sdk-java:5059cb6'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    compile 'com.android.support:cardview-v7:25.1.0'
    compile 'com.android.support:recyclerview-v7:25.1.0'
    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
}

buildscript {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath 'com.github.hasura.baas-sdk-java:hasura-db-codegen:5059cb6'
    }
}

task generate << {

    // Read admin credentials
    Properties props = new Properties()
    props.load(new FileInputStream("hasura.properties"))

    // Build Generation Configuration
    // ------------------------------
    def cfg = new io.hasura.db.util.Configuration();
    cfg.setDir(props.getProperty("dir"))
    cfg.setPackageName(props.getProperty("package"))
    cfg.setDBUrl(props.getProperty("url"))
    cfg.setDBPrefix(props.getProperty("dbprefix"))
    cfg.setAdminAPIKey(props.getProperty("adminAPIKey"))

    // Run the code generator
    // ----------------------
    io.hasura.db.util.GenerationUtil.generate(cfg)
}
